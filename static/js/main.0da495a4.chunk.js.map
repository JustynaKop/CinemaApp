{"version":3,"sources":["Movie.js","Ticket.js","CinemaHall.js","Reservation.js","App.js","serviceWorker.js","index.js"],"names":["Movie","props","filterAvailableHours","date","availableHours","state","movieData","displayDates","filter","element","Date","displayDateTime","toLocaleDateString","map","val","label","hour","minute","split","value","sort","v","selectedDateTime","onDateChanged","item","setState","selectedDate","onSelectedDateTimeChanged","onReserveClicked","event","console","log","setMinHeight","height","minHeight","componentDidMount","render","style","className","ref","color","movie","title","src","poster","alt","options","onChange","placholder","onClick","director","actors","description","d","index","array","indexOf","undefined","React","createRef","Component","Ticket","onTicketValueChanged","newTickets","selectedTickets","target","id","onNextClick","sum","Object","values","reduce","Number","lastError","onTicketsSelected","tickets","amount","_id","fetch","then","resp","status","Promise","reject","json","ticketsData","obj","el","forEach","ticket","key","name","basePriceRatio","type","min","max","CinemaHall","onPreviousClicked","onNextClicked","selectedSeats","length","toSelect","onSeatsSelected","selectedCinemaHall","repertoires","find","r","cinemaHall","onSeatClicked","seat","seats","reserved","includes","splice","push","ensureInputIsValid","hallJson","reservedSeatsJson","cinemaHallData","reservedSeatsIds","i","newHallData","cinemaHallsData","reducedSelectedSeats","toRemoveCount","x","pop","fixedSelectedSeats","fetchReservedSeatsData","repertoire","repertoireId","renderSeats","maxRow","renderingRowNumber","maxCol","renderingColumnNumber","y","s","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","Reservation","t","ticketsIds","method","headers","body","JSON","stringify","firstName","lastName","email","phoneNumber","errors","onFinish","onNameChange","onLastNameChange","onEmailChange","onPhoneNumberChange","generalErrors","e","param","msg","firstNamErrors","lastNameErrors","phoneNumberErrors","emailErrors","htmlFor","parseFloat","Math","round","baseTicketPrice","toFixed","App","reset","stage","reservationDateTime","movieToReserve","repertoiresAvailableToReserve","selectedRepertoire","alignCards","cards","current","offsetHeight","window","addEventListener","setTimeout","movies","onMakeReservation","dateTime","onCloseModal","dots","infinite","speed","slidesToShow","slidesToScroll","slidesPerRow","responsive","breakpoint","settings","data","instance","getModal","this","display","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0da495a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport Dropdown from 'react-dropdown'\r\nimport 'react-dropdown/style.css'\r\nimport './movie.css';\r\n\r\nclass Movie extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.displayDates = props.movieData.displayDates.sort().map(d => new Date(d.displayDateTime).toLocaleDateString(\"pl-PL\"))\r\n        .filter((element, index, array) => array.indexOf(element) === index);\r\n    this.availableHours = [];\r\n    this.selectedDateTime = undefined;\r\n    \r\n    this.state = { movieData : props.movieData, selectedDate: this.displayDates[0], minHeight: this.props.minHeight || 0 };\r\n\r\n    this.ref = React.createRef();\r\n  }\r\n\r\n  filterAvailableHours = (date) => {\r\n    this.availableHours = this.state.movieData.displayDates.filter((element) => new Date(element.displayDateTime).toLocaleDateString(\"pl-PL\") === date)\r\n    .map(val => { \r\n        const dateTime = new Date(val.displayDateTime).toLocaleDateString(\"pl-PL\",  { hour: 'numeric', minute: 'numeric' });\r\n        return { \r\n            label: dateTime.split(\",\")[1], \r\n            value: val.displayDateTime\r\n        }\r\n    })\r\n    .sort(v => v.value); \r\n    this.selectedDateTime = this.availableHours[0].value;\r\n  }\r\n\r\n  onDateChanged = (item) => {\r\n    this.filterAvailableHours(item.value);\r\n    this.setState({selectedDate: item.value});\r\n  }\r\n\r\n  onSelectedDateTimeChanged = (item) => {\r\n    this.selectedDateTime = item.value;\r\n  }\r\n\r\n  onReserveClicked = (event) => {\r\n      console.log(this.selectedDateTime);\r\n    this.props.onReserveClicked(this.selectedDateTime, this.state.movieData);\r\n  }\r\n\r\n  setMinHeight = (height) => {\r\n      this.setState({ minHeight: height});\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.filterAvailableHours(this.state.selectedDate);\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n        <div style={{minHeight: this.state.minHeight + \"px\"}} className=\"movie-container\" ref={this.ref}>\r\n            <h1 style={{color: \"orange\"}}>{this.state.movieData.movie.title}</h1>\r\n            <div className=\"movie-data-container\">\r\n                <div className=\"image-poster-container\">\r\n                    <img className=\"image-poster\" src={this.state.movieData.movie.poster} alt={\"\"}/>\r\n                </div>\r\n                <div className=\"movie-details-container\">\r\n                    <div>\r\n                        <h3 className=\"date-header\"> Display date</h3>\r\n                        <Dropdown options={this.displayDates} onChange={this.onDateChanged} value={this.state.selectedDate} placholder={\"Select date\"}></Dropdown>\r\n                    </div>\r\n                    <div>\r\n                        <h3 className=\"hour-header\">Display hour</h3>\r\n                        <Dropdown options={this.availableHours} onChange={this.onSelectedDateTimeChanged} value={this.availableHours[0]} placholder={\"Select hour\"}></Dropdown>\r\n                    </div>\r\n                    <button className=\"reservation-button\" onClick={this.onReserveClicked}>Make reservation</button>\r\n                    <div>\r\n                        <h3>Director</h3><span className=\"movie-details-text\">{this.state.movieData.movie.director}</span>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Actors</h3><span className=\"movie-details-text\">{this.state.movieData.movie.actors}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h3>Description</h3>\r\n                <p className=\"movie-details-text\">{this.state.movieData.movie.description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport './ticket.css';\r\n\r\nclass Ticket extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { tickets: [], selectedTickets: {}, lastError: \"\"}\r\n    }\r\n\r\n    onTicketValueChanged = (event) => {\r\n        const newTickets = {...this.state.selectedTickets};\r\n        newTickets[event.target.id] = event.target.value;\r\n        this.setState({selectedTickets: newTickets})\r\n    }\r\n\r\n    onNextClick = (event) => {\r\n        const sum = Object.values(this.state.selectedTickets).reduce((sum, val) => Number(sum) + Number(val), 0);\r\n        console.log(sum);\r\n        if (sum > 20) {\r\n            this.setState({lastError: \"Maksimum number of total 20 tickets is allowed. If you need more please contact with our group reservations section.\"});\r\n        }\r\n        else if (sum === 0) {\r\n            this.setState({lastError: \"To continue you need to specify at least one ticket.\"});\r\n        }\r\n        else {\r\n            if (this.props.onTicketsSelected) {\r\n                this.props.onTicketsSelected([...this.state.tickets].map(val => { val.amount = this.state.selectedTickets[val._id] || 0; return val }));\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount= () => {\r\n        fetch(\"https://cinnemapplication.herokuapp.com/ticket\")\r\n        .then(resp => {\r\n            if (resp.status !== 200){\r\n              return Promise.reject(\"Service is temporary unavailable.\");\r\n            }\r\n            return resp.json();\r\n        })\r\n        .then(json => {\r\n            if (json.status !== \"sucess\") {\r\n              return Promise.reject(\"Service is temporary unavailable.\");\r\n            }\r\n\r\n            if (this.props.selectedTickets !== null && this.props.selectedTickets !== undefined)\r\n                this.setState({tickets : json.ticketsData, selectedTickets : this.props.selectedTickets.reduce((obj, el) => { obj[el._id] = el.amount; return obj; }, {}) })\r\n            else {\r\n                const selectedTickets = {};\r\n                json.ticketsData.forEach(element => {\r\n                    selectedTickets[element._id] = 0;\r\n                });\r\n                this.setState({tickets : json.ticketsData, selectedTickets : selectedTickets })\r\n            }\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        if (!this.state.selectedTickets)\r\n            return null;\r\n        return (\r\n            <div className=\"ticket-container\" >\r\n                <div className=\"ticket-table\">\r\n                    <table className=\"ticket-table-details\" >\r\n                        <thead className=\"ticket-table-header\">\r\n                            <tr>\r\n                                <td className=\"ticket-table-td\">Type</td>\r\n                                <td className=\"ticket-table-td\">Discount</td>\r\n                                <td className=\"ticket-table-td\">Amount</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.tickets.map((ticket, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td className=\"ticket-table-td\">{ticket.name}</td>\r\n                                        <td className=\"ticket-table-td\">{100 - ticket.basePriceRatio * 100}</td>\r\n                                        <td className=\"ticket-table-td\">\r\n                                            <input  className=\"ticket-input\" id={ticket._id} onChange={this.onTicketValueChanged} type=\"number\" min=\"0\" max=\"20\" value={this.state.selectedTickets[ticket._id]}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"error-text\">{this.state.lastError || \"\"}</div>\r\n                <div className=\"ticket-buttons\">\r\n                    <button onClick={this.onNextClick} className=\"button\">Next</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Ticket;\r\n","import React from 'react';\r\nimport 'react-dropdown/style.css'\r\n\r\nimport './cinemaHall.css'\r\n\r\nclass CinemaHall extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  repertoires : props.repertoires || [], cinemaHallsData: [], selectedCinemaHall: this.props.selectedCinemaHall, selectedSeats: this.props.selectedSeats || [], lastError: \"\" };\r\n  }\r\n\r\n  onPreviousClicked = (event) => {\r\n    if (!this.props.onPreviousClicked)\r\n        return;\r\n    this.props.onPreviousClicked();\r\n  }\r\n\r\n  onNextClicked = (event) => {\r\n      if (this.state.selectedSeats.length === 0) {\r\n        this.setState({lastError: \"Before you can continue you need to select seats, by clicking on them.\"})\r\n        return;\r\n      }\r\n      else if (this.props.tickets) {\r\n        const toSelect = this.props.tickets.reduce((sum, val) => sum + Number(val.amount), 0);\r\n        if (toSelect !== this.state.selectedSeats.length) {\r\n            this.setState({lastError: `You need to select execly ${toSelect} seats.`});\r\n            return;\r\n        }\r\n      }\r\n      if (!this.props.onSeatsSelected()) {\r\n        this.props.onSeatsSelected(this.state.selectedSeats, this.state.selectedCinemaHall, this.state.repertoires.find(r => r.cinemaHall._id === this.state.selectedCinemaHall.cinemaHall._id));\r\n      }\r\n  }\r\n\r\n  onSeatClicked = (event) => {\r\n    const seat = this.state.selectedCinemaHall.seats.find(seat => event.target.id === seat._id);\r\n    if (!seat || seat.reserved)\r\n        return;\r\n\r\n    const selectedSeats = [...this.state.selectedSeats];\r\n    if (selectedSeats.includes(seat._id)) {\r\n        selectedSeats.splice(selectedSeats.indexOf(seat._id), 1);\r\n    }\r\n    else if (!this.props.tickets || this.props.tickets.reduce((sum, val) => sum + Number(val.amount), 0) > selectedSeats.length) {\r\n        selectedSeats.push(seat._id);\r\n    }\r\n    this.setState({selectedSeats: selectedSeats});\r\n  }\r\n\r\n  ensureInputIsValid = (hallJson, reservedSeatsJson) => {\r\n    hallJson.cinemaHallData.seats.forEach(seat => {\r\n        const val = reservedSeatsJson.reservedSeatsIds.find(i => i === seat._id);\r\n        seat.reserved = val !== null && val !== undefined ? true : false;\r\n    });\r\n    const newHallData = [...this.state.cinemaHallsData, hallJson.cinemaHallData];\r\n    if (this.state.selectedSeats.length > 0 && this.state.selectedCinemaHall && this.state.selectedCinemaHall.cinemaHall._id === hallJson.cinemaHallData.cinemaHall._id) {\r\n        let reducedSelectedSeats = [...this.state.selectedSeats];\r\n        if (this.props.tickets) {\r\n            let toRemoveCount = reducedSelectedSeats.length - this.props.tickets.reduce((sum, val) => sum + Number(val.amount), 0);\r\n            for(let x = 0; x < toRemoveCount; x++) {\r\n                reducedSelectedSeats.pop();\r\n            }\r\n        }\r\n        let fixedSelectedSeats = [...reducedSelectedSeats];\r\n        reducedSelectedSeats.forEach(id => { \r\n            const seat = hallJson.cinemaHallData.seats.find(seat => id === seat._id);\r\n            if (seat.reserved) {\r\n                fixedSelectedSeats.splice(fixedSelectedSeats.indexOf(seat._id), 1);\r\n            }\r\n        });\r\n        this.setState({selectedSeats: fixedSelectedSeats});\r\n    }\r\n    this.setState({cinemaHallsData: newHallData, selectedCinemaHall: this.state.selectedCinemaHall || hallJson.cinemaHallData });\r\n  }\r\n\r\n  fetchReservedSeatsData = (repertoire, hallJson) => {\r\n    fetch(\"https://cinnemapplication.herokuapp.com/reservation/reservedSeats/\" + repertoire.repertoireId)\r\n    .then(resp => {\r\n        if (resp.status !== 200){\r\n          return Promise.reject(\"Service is temporary unavailable.\");\r\n        }\r\n        return resp.json();\r\n    })\r\n    .then(json => {\r\n        if (json.status !== \"sucess\") {\r\n          return Promise.reject(\"Service is temporary unavailable.\");\r\n        }\r\n        this.ensureInputIsValid(hallJson, json);\r\n    });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.repertoires.forEach(repertoire => {\r\n        fetch(\"https://cinnemapplication.herokuapp.com/hall/\" + repertoire.cinemaHall._id)\r\n        .then(resp => {\r\n            if (resp.status !== 200){\r\n              return Promise.reject(\"Service is temporary unavailable.\");\r\n            }\r\n            return resp.json();\r\n        })\r\n        .then(hallJson => {\r\n            if (hallJson.status !== \"sucess\") {\r\n              return Promise.reject(\"Service is temporary unavailable.\");\r\n            }\r\n            this.fetchReservedSeatsData(repertoire, hallJson);\r\n        });\r\n    });\r\n  }\r\n\r\n  renderSeats = () => {\r\n    const seats = [];\r\n    let maxRow = this.state.selectedCinemaHall.seats.reduce((max, seat) => max = Number(seat.renderingRowNumber) > max ? Number(seat.renderingRowNumber) : max, 0); \r\n    let maxCol = this.state.selectedCinemaHall.seats.reduce((max, seat) => max = Number(seat.renderingColumnNumber) > max ? Number(seat.renderingColumnNumber) : max, 0); \r\n    for (let x = 0; x < maxRow; x++) {\r\n        for(let y = 0; y < maxCol; y++) {\r\n            const seat = this.state.selectedCinemaHall.seats.find(s => s.renderingRowNumber === x && s.renderingColumnNumber === y);\r\n            if (seat)\r\n            {\r\n                let className = \"seat-available\";\r\n                if (seat.reserved) {\r\n                    className = \"seat-reserved\";\r\n                }\r\n                else if (this.state.selectedSeats.includes(seat._id)) {\r\n                    className = \"seat-selected\";\r\n                }\r\n                seats.push(<div className={\"seat \" + className} key= {\"row\" + x + \"col\" + y} id = {seat._id} style={{gridColumnStart: y, gridColumnEnd: y, gridRowStart: x, gridRowEnd: x}} onClick = {this.onSeatClicked}></div>);\r\n            }\r\n            else {\r\n                seats.push(<div className=\"seat\" key= {\"row\" + x + \"col\" + y} style={{gridColumnStart: y, gridColumnEnd: y, gridRowStart: x, gridRowEnd: x}}></div>);\r\n            }\r\n        }\r\n    }\r\n    return seats;\r\n  }\r\n\r\n  render = () => {\r\n    if (this.state.cinemaHallsData.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"cinema-hall-main-container\">\r\n            <div className=\"cinema-hall-screen-container\"><h1>SCREEN</h1></div>\r\n            <div className=\"seats-container\">\r\n                {this.renderSeats()}\r\n            </div>\r\n            <div className=\"error-text\">{this.state.lastError}</div>\r\n            <div className=\"cinema-hall-buttons\">\r\n                <button className=\"button\" onClick={this.onPreviousClicked}>Previous</button>\r\n                <button className=\"button\" onClick={this.onNextClicked}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CinemaHall;\r\n","import React from 'react';\r\nimport './reservation.css';\r\n\r\nclass Reservation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { tickets: this.props.tickets, repertoire: this.props.repertoire, seats: this.props.seats, errors: [] };\r\n    }\r\n\r\n    onPreviousClicked = (event) => {\r\n        if (!this.props.onPreviousClicked)\r\n            return;\r\n        this.props.onPreviousClicked();\r\n    }\r\n\r\n    onReserveClicked = (event) => {\r\n        const tickets = this.state.tickets.filter(t => t.amount > 0);\r\n        const ticketsIds = [];\r\n        tickets.forEach(element => {\r\n            for(let x = 0; x < element.amount; x++) {\r\n                ticketsIds.push(element._id);\r\n            }\r\n        });\r\n        console.log(\"wysylam\");\r\n        console.log(ticketsIds);\r\n        const response = fetch(\"https://cinnemapplication.herokuapp.com/reservation\", {\r\n            method: 'POST', \r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ \r\n                firstName: this.name, \r\n                lastName: this.lastName, \r\n                email: this.email, \r\n                phoneNumber: this.phoneNumber, \r\n                repertoireId: \r\n                this.state.repertoire.repertoireId,  \r\n                seats: this.state.seats,\r\n                tickets: ticketsIds\r\n            })\r\n          })\r\n          .then(resp => {\r\n              if (resp.status !== 200 && resp.status !== 422) {\r\n                return Promise.reject(\"Service is temporary unavailable.\");\r\n              }\r\n              return resp.json();\r\n          })\r\n          .then(json => {\r\n            if (json.status === \"validationFailed\") {\r\n                this.setState({errors: json.errors});\r\n            }\r\n            else {\r\n                if (this.props.onFinish){\r\n                    this.props.onFinish();\r\n                }\r\n            }\r\n          })\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.name = event.target.value;\r\n    }\r\n\r\n    onLastNameChange = (event) => {\r\n        this.lastName = event.target.value;\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.email = event.target.value;\r\n    }\r\n\r\n    onPhoneNumberChange = (event) => {\r\n        this.phoneNumber = event.target.value;\r\n    }\r\n    \r\n    render = () => {\r\n        const generalErrors = this.state.errors.filter(e => e.param !== \"firstName\" && e.param !== \"lastName\" && e.param !== \"email\" && e.param !== \"phoneNumber\").map(e => <p className=\"reservation-error-text\">{e.msg}</p>);\r\n        const firstNamErrors = this.state.errors.filter(e => e.param === \"firstName\").map(e => <p className=\"reservation-error-text\">{e.msg}</p>);\r\n        const lastNameErrors = this.state.errors.filter(e => e.param === \"lastName\").map(e => <p className=\"reservation-error-text\">{e.msg}</p>);\r\n        const phoneNumberErrors = this.state.errors.filter(e => e.param === \"phoneNumber\").map(e => <p className=\"reservation-error-text\">{e.msg}</p>);\r\n        const emailErrors = this.state.errors.filter(e => e.param === \"email\").map(e => <p className=\"reservation-error-text\">{e.msg}</p>);\r\n        return (\r\n            <div className=\"reservation-container\" >\r\n                <div>{generalErrors}</div>\r\n                <div className=\"reservation-input-container\">\r\n                    <label htmlFor=\"name\">First name</label>\r\n                    <div>\r\n                        <input className=\"reservation-input\" id=\"name\" type=\"text\" onChange={this.onNameChange}/>\r\n                    </div>\r\n                    <div>{firstNamErrors}</div>\r\n                </div>\r\n\r\n                <div className=\"reservation-input-container\">\r\n                    <label htmlFor=\"surname\">Last name</label>\r\n                    <div>\r\n                        <input className=\"reservation-input\" id=\"surname\" type=\"text\" onChange={this.onLastNameChange}/>\r\n                    </div>\r\n                    <div>{lastNameErrors}</div> \r\n                </div>\r\n\r\n                <div className=\"reservation-input-container\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <div>\r\n                        <input className=\"reservation-input\" id=\"email\" type=\"text\" onChange={this.onEmailChange}/>\r\n                    </div>\r\n                    <div>{emailErrors}</div>\r\n                </div>\r\n\r\n                <div className=\"reservation-input-container\">\r\n                    <label htmlFor=\"phoneNumber\">Phone number</label>\r\n                    <div>\r\n                        <input className=\"reservation-input\" id=\"phoneNumber\" type=\"text\" onChange={this.onPhoneNumberChange}/>\r\n                    </div>\r\n                    <div>{phoneNumberErrors}</div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"total-price\">Total price: <span>{parseFloat(Math.round(this.state.tickets.reduce((val, el) => { val += Number(el.basePriceRatio) * Number(this.state.repertoire.baseTicketPrice) * Number(el.amount); return val; }, 0) * 100) / 100).toFixed(2)}</span> zł</div>   \r\n                </div>\r\n                \r\n                <div className=\"reservation-wrapper\">\r\n                    <button className=\"button\" onClick={this.onPreviousClicked}>Previous</button>\r\n                    <button className=\"button\" onClick={this.onReserveClicked}>Reserve</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reservation;\r\n","import React from 'react';\nimport Slider from \"react-slick\";\nimport Movie from \"./Movie\";\nimport Ticket from \"./Ticket\";\nimport CinemaHall from \"./CinemaHall\";\nimport Reservation from \"./Reservation\";\n\nimport './App.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { movies: [], stage: 0 }\n    this.cards = [];\n    this.reset();\n  }\n\n  reset = () => {\n    this.setState({stage: 0});\n    this.reservationDateTime = 0;\n    this.movieToReserve = null;\n    this.repertoiresAvailableToReserve = null;\n    this.selectedTickets = null;\n    this.selectedSeats = null;\n    this.selectedCinemaHall = null;\n    this.selectedRepertoire = null;\n  }\n\n  alignCards = () => {\n    if (this.cards.length === 0)\n      return;\n    for (let x = 0; x < this.cards.length; x++) {\n      this.cards[x].setMinHeight(0);\n    }\n    const min = this.cards.reduce((max, el) => el.ref.current.offsetHeight > max ? el.ref.current.offsetHeight : max, 0);\n    if (min > 0) {\n      for (let x = 0; x < this.cards.length; x++) {\n        this.cards[x].setMinHeight(min);\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('resize', (event) => {\n      setTimeout(() => { \n        this.alignCards();\n      }, 100);\n    });\n    fetch(\"https://cinnemapplication.herokuapp.com/repertoire\")\n    .then(resp => {\n        if (resp.status !== 200){\n          return Promise.reject(\"Service is temporary unavailable.\");\n        }\n        return resp.json();\n    })\n    .then(json => {\n        if (json.status !== \"sucess\") {\n          return Promise.reject(\"Service is temporary unavailable.\");\n        }\n        this.setState({ movies : json.movies })\n        setTimeout(() => { \n          this.alignCards();this.alignCards();\n        }, 200);\n    })\n  }\n\n  onMakeReservation = (dateTime, movieData) => {\n    this.reservationDateTime = dateTime;\n    this.movieToReserve = movieData;\n    this.setState({ dateTime, stage: 1 });\n  }\n\n  onTicketsSelected = (tickets) => {\n    this.selectedTickets = tickets;\n    this.repertoiresAvailableToReserve = this.movieToReserve.displayDates.find(movie => movie.displayDateTime === this.reservationDateTime).repertoires;\n    this.setState({ stage: 2 });\n  }\n\n  onSeatsSelected = (seats, cinemaHall, repertoire) => {\n    this.selectedSeats = seats;\n    this.selectedCinemaHall = cinemaHall;\n    this.selectedRepertoire = repertoire;\n    this.setState({stage: 3});\n  }\n\n  onCloseModal = () => {\n    this.reset();\n    this.setState({stage: 0});\n  }\n\n  onPreviousClicked = () => {\n    this.setState({stage: this.state.stage - 1});\n  }\n\n  getModal() {\n    if (this.state.stage === 1) {\n      return (\n        <div style={{display : this.state.stage === 1 ? \"block\" : \"none\"}} className=\"modal\">\n          <div className=\"modal-content modal-content-tickets\">\n            <div className=\"close\" onClick={() => this.onCloseModal()}>&times;</div>\n            <h1 className=\"dialog-header\">Please specify tickets you want to buy</h1>\n            <div className=\"modal-custom-area\">\n              <Ticket selectedTickets={this.selectedTickets} onTicketsSelected={this.onTicketsSelected}></Ticket>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (this.state.stage === 2) {\n      return (\n        <div style={{display : this.state.stage === 2 ? \"block\" : \"none\"}} className=\"modal\">\n          <div className=\"modal-content modal-content-seats\">\n            <div className=\"close\" onClick={() => this.onCloseModal()}>&times;</div>\n            <h1 className=\"dialog-header\">Please select your seats</h1>\n            <div className=\"modal-custom-area\">\n              <CinemaHall selectedCinemaHall={this.selectedCinemaHall} tickets={this.selectedTickets} selectedSeats= {this.selectedSeats} repertoires={this.repertoiresAvailableToReserve} onPreviousClicked={this.onPreviousClicked} onSeatsSelected={this.onSeatsSelected}></CinemaHall>\n            </div>\n          </div>\n        </div>\n      );\n    } else if (this.state.stage === 3) {\n      return (\n        <div style={{display : this.state.stage === 3 ? \"block\" : \"none\"}} className=\"modal\">\n          <div className=\"modal-content modal-content-reservation\">\n            <div className=\"close\" onClick={() => this.onCloseModal()}>&times;</div>\n            <h1 className=\"dialog-header\">Please insert reservation data</h1>\n            <div className=\"modal-custom-area\">\n              <Reservation tickets={this.selectedTickets} repertoire={this.selectedRepertoire} seats={this.selectedSeats} onPreviousClicked={this.onPreviousClicked} onFinish={this.onCloseModal}></Reservation>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  render = () => {\n    var settings = {\n      dots: false,\n      infinite: false,\n      speed: 900,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      slidesPerRow: 1,\n      responsive: [\n        {\n          breakpoint: 1500,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 1,\n          }\n        },\n        {\n          breakpoint: 1000,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          }\n        }]\n    };\n    return (\n      <div className=\"main-container\">\n        <Slider {...settings}>\n          {this.state.movies.map((data, index) => <Movie key={index} movieData={data} onReserveClicked={this.onMakeReservation}  ref={(instance)=> this.cards[index] = instance}/>)}\n        </Slider>\n        {this.getModal()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}